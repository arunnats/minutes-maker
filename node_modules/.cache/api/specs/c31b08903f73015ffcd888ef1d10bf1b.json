{
  "openapi": "3.1.0",
  "info": {
    "title": "Deepgram",
    "version": "unknown"
  },
  "servers": [
    {
      "url": "https://api.deepgram.com/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "sec0": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "x-bearer-format": "token"
      }
    }
  },
  "security": [
    {
      "sec0": []
    }
  ],
  "paths": {
    "/projects/{project_id}/members": {
      "get": {
        "summary": "Get Members",
        "description": "Retrieves account objects for all of the accounts in the specified project",
        "operationId": "get-members",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to get members. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"members\": [\n    {\n      \"member_id\": \"uuid\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"scopes\": [\n        \"string\"\n      ],\n      \"email\": \"string\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "member_id": {
                            "type": "string",
                            "example": "uuid"
                          },
                          "first_name": {
                            "type": "string",
                            "example": "string"
                          },
                          "last_name": {
                            "type": "string",
                            "example": "string"
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "string"
                            }
                          },
                          "email": {
                            "type": "string",
                            "example": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"err_code\": \"PROJECT_NOT_FOUND\",\n  \"err_msg\": \"Project not found.\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "err_code": {
                      "type": "string",
                      "example": "PROJECT_NOT_FOUND"
                    },
                    "err_msg": {
                      "type": "string",
                      "example": "Project not found."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/members/{member_id}": {
      "delete": {
        "summary": "Remove Member",
        "description": "Removes the specified account from the specified project",
        "operationId": "remove-member",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to get members. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "member_id",
            "in": "path",
            "description": "Unique identifier of the account that you want to remove. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"err_code\": \"PROJECT_NOT_FOUND\",\n  \"err_msg\": \"Project not found.\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "err_code": {
                      "type": "string",
                      "example": "PROJECT_NOT_FOUND"
                    },
                    "err_msg": {
                      "type": "string",
                      "example": "Project not found."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/keys": {
      "get": {
        "summary": "Get Keys",
        "description": "Retrieves keys for the specified project",
        "operationId": "list-keys",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to get keys. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"api_keys\":[{\"member\":{\"member_id\":\"c74f9a10-ea40-4585-951e-88e63c35108f\",\"email\":\"devrel@deepgram.com\",\"first_name\":\"Deepgram\",\"last_name\":\"Team\"},\"api_key\":{\"api_key_id\":\"17c8886a-b58f-4c15-a7eb-9e52f2cf26ce\",\"comment\":\"Member API key\",\"scopes\":[\"member\"],\"tags\":[\"user\"],\"created\":\"2021-06-01T14:03:35.815832Z\"}},{\"member\":{\"member_id\":\"b74f9a00-ea40-4585-951e-88e63c35108f\",\"email\":\"devrel@deepgram.com\",\"first_name\":\"Scott\",\"last_name\":\"Stephenson\"},\"api_key\":{\"api_key_id\":\"15f6022a-d188-4317-a3dd-4340fdeddb75\",\"comment\":\"Management API key\",\"scopes\":[\"owner\"],\"created\":\"2021-05-30T12:24:33.564224Z\"}}]}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "api_keys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "member": {
                            "type": "object",
                            "properties": {
                              "member_id": {
                                "type": "string",
                                "example": "c74f9a10-ea40-4585-951e-88e63c35108f"
                              },
                              "email": {
                                "type": "string",
                                "example": "devrel@deepgram.com"
                              },
                              "first_name": {
                                "type": "string",
                                "example": "Deepgram"
                              },
                              "last_name": {
                                "type": "string",
                                "example": "Team"
                              }
                            }
                          },
                          "api_key": {
                            "type": "object",
                            "properties": {
                              "api_key_id": {
                                "type": "string",
                                "example": "17c8886a-b58f-4c15-a7eb-9e52f2cf26ce"
                              },
                              "comment": {
                                "type": "string",
                                "example": "Member API key"
                              },
                              "scopes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "member"
                                }
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "user"
                                }
                              },
                              "created": {
                                "type": "string",
                                "example": "2021-06-01T14:03:35.815832Z"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"category\": \"NOT_FOUND\",\n  \"message\": \"A project with the submitted ID cannot be found.\",\n  \"details\": \"Check that you have submitted the intended project ID and that the project has not been deleted.\",\n  \"request_id\": \"748f0880-8584-4003-b5aa-08168c5dd14e\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "A project with the submitted ID cannot be found."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you have submitted the intended project ID and that the project has not been deleted."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "748f0880-8584-4003-b5aa-08168c5dd14e"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create Key",
        "description": "Creates a new key in the specified project",
        "operationId": "create-key",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to create a key.(UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "comment",
                  "scopes"
                ],
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Comments associated with the key you would like to create. Must be between 1 and 128 characters long, not including whitespace."
                  },
                  "scopes": {
                    "type": "array",
                    "description": "Scopes for the key you would like to create.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "Tags associated with the key you would like to create.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "expiration_date": {
                    "type": "string",
                    "description": "<p>Date on which the key you would like to create should expire.</p><p>For each key, you may specify either an <strong><code>expiration_date</strong></code> or a <strong><code>time_to_live_in_seconds</strong></code>, but not both.</p>",
                    "format": "date"
                  },
                  "time_to_live_in_seconds": {
                    "type": "integer",
                    "description": "<p>Length of time (in seconds) during which the key you would like to create will remain valid.</p> <p>For each key, you may specify either an <strong><code>expiration_date</strong></code> or a <strong><code>time_to_live_in_seconds<strong><code>, but not both.</p>",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  },
                  "On-prem API key example response": {
                    "value": "{\n  \"api_key_id\": \"b6c318f0-bc94-40b3-83a9-7f6898cd5500\",\n  \"key\": \"1bc4a5e63f8425c9fd102539739923204243b9ce\",\n  \"comment\": \"Test On-prem API Key with curl\",\n  \"scopes\": [\n    \"member\",\n    \"onprem:product:api\",\n    \"onprem:product:engine\",\n    \"onprem:product:license-proxy\"\n  ],\n  \"created\": \"2023-06-27T16:59:46.572660Z\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "api_key_id": {
                      "type": "string",
                      "example": "b6c318f0-bc94-40b3-83a9-7f6898cd5500"
                    },
                    "key": {
                      "type": "string",
                      "example": "1bc4a5e63f8425c9fd102539739923204243b9ce"
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test On-prem API Key with curl"
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "member"
                      }
                    },
                    "created": {
                      "type": "string",
                      "example": "2023-06-27T16:59:46.572660Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"category\": \"NOT_FOUND\",\n  \"message\": \"A project with the submitted ID cannot be found.\",\n  \"details\": \"Check that you have submitted the intended project ID and that the project has not been deleted.\",\n  \"request_id\": \"748f0880-8584-4003-b5aa-08168c5dd14e\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "A project with the submitted ID cannot be found."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you have submitted the intended project ID and that the project has not been deleted."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "748f0880-8584-4003-b5aa-08168c5dd14e"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/keys/{key_id}": {
      "get": {
        "summary": "Get Key",
        "description": "Retrieves basic information about the specified key",
        "operationId": "get-key",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to get keys. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "key_id",
            "in": "path",
            "description": "Unique identifier of the key that you want to retrieve. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"member\": {\n    \"member_id\": \"b74f9a00-ea40-4585-951e-88e63c35108f\",\n    \"email\": \"devrel@deepgram.com\",\n    \"first_name\": \"Deepgram\",\n    \"last_name\": \"Team\"\n  },\n  \"api_key\": {\n    \"api_key_id\": \"17c8886a-b58f-4c15-a7eb-9e52f2cf26ce\",\n    \"comment\": \"Member API key\",\n    \"scopes\": [\n      \"member\"\n    ],\n    \"tags\": [\n      \"user\"\n    ],\n    \"created\": \"2021-06-01T14:03:35.815832Z\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "member": {
                      "type": "object",
                      "properties": {
                        "member_id": {
                          "type": "string",
                          "example": "b74f9a00-ea40-4585-951e-88e63c35108f"
                        },
                        "email": {
                          "type": "string",
                          "example": "devrel@deepgram.com"
                        },
                        "first_name": {
                          "type": "string",
                          "example": "Deepgram"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Team"
                        }
                      }
                    },
                    "api_key": {
                      "type": "object",
                      "properties": {
                        "api_key_id": {
                          "type": "string",
                          "example": "17c8886a-b58f-4c15-a7eb-9e52f2cf26ce"
                        },
                        "comment": {
                          "type": "string",
                          "example": "Member API key"
                        },
                        "scopes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "member"
                          }
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "user"
                          }
                        },
                        "created": {
                          "type": "string",
                          "example": "2021-06-01T14:03:35.815832Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"category\": \"NOT_FOUND\",\n  \"message\": \"A project with the submitted ID cannot be found.\",\n  \"details\": \"Check that you have submitted the intended project ID and that the project has not been deleted.\",\n  \"request_id\": \"748f0880-8584-4003-b5aa-08168c5dd14e\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "A project with the submitted ID cannot be found."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you have submitted the intended project ID and that the project has not been deleted."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "748f0880-8584-4003-b5aa-08168c5dd14e"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete Key",
        "description": "Deletes the specified key in the specified project",
        "operationId": "delete-key",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project that contains the key that you want to delete. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "key_id",
            "in": "path",
            "description": "Unique identifier of the key that you want to delete. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"string\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"category\": \"NOT_FOUND\",\n  \"message\": \"A project with the submitted ID cannot be found.\",\n  \"details\": \"Check that you have submitted the intended project ID and that the project has not been deleted.\",\n  \"request_id\": \"748f0880-8584-4003-b5aa-08168c5dd14e\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "A project with the submitted ID cannot be found."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you have submitted the intended project ID and that the project has not been deleted."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "748f0880-8584-4003-b5aa-08168c5dd14e"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects": {
      "get": {
        "summary": "Get Projects",
        "description": "Retrieves basic information about the projects associated with the API key",
        "operationId": "get-projects",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"projects\":[{\"project_id\":\"2c10a921-39ba-4965-9a0d-a0c9f1dc71b8\",\"name\":\"developers@deepgram.com's Project\"}]}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "project_id": {
                            "type": "string",
                            "example": "2c10a921-39ba-4965-9a0d-a0c9f1dc71b8"
                          },
                          "name": {
                            "type": "string",
                            "example": "developers@deepgram.com's Project"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}": {
      "get": {
        "summary": "Get Project",
        "description": "Retrieves information about the specified project",
        "operationId": "get-project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to retrieve information. (UUID)",
            "schema": {
              "type": "string",
              "default": "b10c3343-dc0e-4cec-9fae-224e671290e7"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"project_id\": \"uuid\",\n  \"name\": \"string\",\n  \"company\": \"string\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "project_id": {
                      "type": "string",
                      "example": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "example": "string"
                    },
                    "company": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"category\": \"NOT_FOUND\",\n  \"message\": \"A project with the submitted ID cannot be found.\",\n  \"details\": \"Check that you have submitted the intended project ID and that the project has not been deleted.\",\n  \"request_id\": \"748f0880-8584-4003-b5aa-08168c5dd14e\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "A project with the submitted ID cannot be found."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you have submitted the intended project ID and that the project has not been deleted."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "748f0880-8584-4003-b5aa-08168c5dd14e"
                    }
                  }
                }
              },
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "UUID parsing failed: invalid length: expected length 32 for simple format, found X"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update Project",
        "description": "Updates the specified project",
        "operationId": "update-project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project that you want to update. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Update the project name."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"string\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"category\": \"INVALID_JSON\",\n  \"message\": \"Invalid JSON submitted.\",\n  \"details\": \"Json deserialize error: EOF while parsing a value at line 1 column 0\",\n  \"request_id\": \"8bd53f38-9db5-48a1-a24c-921e81a5ecd4\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "INVALID_JSON"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid JSON submitted."
                    },
                    "details": {
                      "type": "string",
                      "example": "Json deserialize error: EOF while parsing a value at line 1 column 0"
                    },
                    "request_id": {
                      "type": "string",
                      "example": "8bd53f38-9db5-48a1-a24c-921e81a5ecd4"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"INSUFFICIENT_PERMISSIONS\",\"message\":\"Your account does not have the required scope to perform that action for this project.\",\"details\":\"Check that your account has the 'project:write:settings' scope for this project.\",\"request_id\":\"003d93f1-648c-46cc-82c4-00eed1a7d4e2\"}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Authentication failed."
                        },
                        "details": {
                          "type": "string",
                          "example": "Check that you are using the correct credentials."
                        },
                        "request_id": {
                          "type": "string",
                          "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "string",
                          "example": "INSUFFICIENT_PERMISSIONS"
                        },
                        "message": {
                          "type": "string",
                          "example": "Your account does not have the required scope to perform that action for this project."
                        },
                        "details": {
                          "type": "string",
                          "example": "Check that your account has the 'project:write:settings' scope for this project."
                        },
                        "request_id": {
                          "type": "string",
                          "example": "003d93f1-648c-46cc-82c4-00eed1a7d4e2"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"category\": \"NOT_FOUND\",\n  \"message\": \"A project with the submitted ID cannot be found.\",\n  \"details\": \"Check that you have submitted the intended project ID and that the project has not been deleted.\",\n  \"request_id\": \"748f0880-8584-4003-b5aa-08168c5dd14e\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "A project with the submitted ID cannot be found."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you have submitted the intended project ID and that the project has not been deleted."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "748f0880-8584-4003-b5aa-08168c5dd14e"
                    }
                  }
                }
              },
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "UUID parsing failed: invalid length: expected length 32 for simple format, found X"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete Project",
        "description": "Deletes the specified project",
        "operationId": "delete-project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project that you want to delete. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"INSUFFICIENT_PERMISSIONS\",\"message\":\"Your account does not have the required scope to perform that action for this project.\",\"details\":\"Check that your account has the 'project:write:destroy' scope for this project.\",\"request_id\":\"28cc6f81-7259-48c4-a19a-021a2ef6e47b\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "INSUFFICIENT_PERMISSIONS"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your account does not have the required scope to perform that action for this project."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that your account has the 'project:write:destroy' scope for this project."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "28cc6f81-7259-48c4-a19a-021a2ef6e47b"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"category\": \"NOT_FOUND\",\n  \"message\": \"A project with the submitted ID cannot be found.\",\n  \"details\": \"Check that you have submitted the intended project ID and that the project has not been deleted.\",\n  \"request_id\": \"748f0880-8584-4003-b5aa-08168c5dd14e\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "A project with the submitted ID cannot be found."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you have submitted the intended project ID and that the project has not been deleted."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "748f0880-8584-4003-b5aa-08168c5dd14e"
                    }
                  }
                }
              },
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "UUID parsing failed: invalid length: expected length 32 for simple format, found X"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/members/{member_id}/scopes": {
      "get": {
        "summary": "Get Member Scopes",
        "description": "Lists the specified project scopes assigned to the specified member",
        "operationId": "get-member-scopes",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Identifier of the project that contains the member for whom you want to get scopes. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "member_id",
            "in": "path",
            "description": "Unique identifier of the member for whom you want to get scopes.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"scopes\": [\"string\"]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"category\": \"NOT_FOUND\",\n  \"message\": \"A project with the submitted ID cannot be found.\",\n  \"details\": \"Check that you have submitted the intended project ID and that the project has not been deleted.\",\n  \"request_id\": \"748f0880-8584-4003-b5aa-08168c5dd14e\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "A project with the submitted ID cannot be found."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you have submitted the intended project ID and that the project has not been deleted."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "748f0880-8584-4003-b5aa-08168c5dd14e"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update Scope",
        "description": "Updates the specified project scopes assigned to the specified member.",
        "operationId": "update-scope",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project that contains the specified member and scope that you want to update. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "member_id",
            "in": "path",
            "description": "Unique identifier of the member for whom you want to update the scope. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scope": {
                    "type": "string",
                    "description": "Scope for the specified member and project."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"message\": \"string\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"category\": \"NOT_FOUND\",\n  \"message\": \"A project with the submitted ID cannot be found.\",\n  \"details\": \"Check that you have submitted the intended project ID and that the project has not been deleted.\",\n  \"request_id\": \"748f0880-8584-4003-b5aa-08168c5dd14e\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "A project with the submitted ID cannot be found."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you have submitted the intended project ID and that the project has not been deleted."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "748f0880-8584-4003-b5aa-08168c5dd14e"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/leave": {
      "delete": {
        "summary": "Leave Project",
        "description": "Removes the authenticated account from the specified project",
        "operationId": "leave-project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project from which you want to remove the authenticated account. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"message\": \"string\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/requests": {
      "get": {
        "summary": "Get All Requests",
        "description": "Generates a list of requests sent to the Deepgram API.",
        "operationId": "get-all-requests",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to retrieve requests. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page. Default 10. Range [1,100].",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of requests to return. Enables you to filter requests depending on whether they have succeeded or failed. If not specified, returns requests with all statuses.",
            "schema": {
              "type": "string",
              "enum": [
                null,
                "succeeded",
                "failed"
              ],
              "default": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"page\": 0,\n\t\"limit\": 0,\n\t\"requests\": [\n\t\t{\n\t\t\t\"request_id\": \"uuid\",\n\t\t\t\"created\": \"YYYY-MM-DDThh:mm:ss.sTZD\",\n\t\t\t\"path\": \"string\",\n\t\t\t\"api_key_id\": \"uuid\",\n\t\t\t\"response\": {\n\t\t\t\t\"details\": {\n\t\t\t\t\t\"usd\": 0,\n\t\t\t\t\t\"duration\": 0,\n\t\t\t\t\t\"total_audio\": 0,\n\t\t\t\t\t\"channels\": 0,\n\t\t\t\t\t\"streams\": 0,\n\t\t\t\t\t\"models\": [\"string\"],\n\t\t\t\t\t\"method\": \"string\",\n\t\t\t\t\t\"tags\": [\"string\"],\n\t\t\t\t\t\"features\": [\"string\"],\n\t\t\t\t\t\"config\": {\n\t\t\t\t\t\t\"alternatives\": 0,\n\t\t\t\t\t\t\"diarize\": true,\n\t\t\t\t\t\t\"keywords\": [\"string\"],\n\t\t\t\t\t\t\"language\": \"string\",\n\t\t\t\t\t\t\"model\": \"string\",\n\t\t\t\t\t\t\"multichannel\": true,\n\t\t\t\t\t\t\"ner\": true,\n\t\t\t\t\t\t\"numerals\": true,\n\t\t\t\t\t\t\"profanity_filter\": false,\n\t\t\t\t\t\t\"punctuate\": true,\n\t\t\t\t\t\t\"redact\": [\"string\"],\n\t\t\t\t\t\t\"search\": [\"string\"],\n\t\t\t\t\t\t\"utterances\": true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"code\": 0,\n\t\t\t\t\"completed\": \"YYYY-MM-DDThh:mm:ss.sTZD\"\n\t\t\t},\n\t\t\t\"callback\": {\n\t\t\t\t\"attempts\": 0,\n\t\t\t\t\"code\": 0,\n\t\t\t\t\"completed\": \"YYYY-MM-DDThh:mm:ss.sTZD\"\n\t\t\t}\n\t\t}\n\t]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "limit": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "requests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "request_id": {
                            "type": "string",
                            "example": "uuid"
                          },
                          "created": {
                            "type": "string",
                            "example": "YYYY-MM-DDThh:mm:ss.sTZD"
                          },
                          "path": {
                            "type": "string",
                            "example": "string"
                          },
                          "api_key_id": {
                            "type": "string",
                            "example": "uuid"
                          },
                          "response": {
                            "type": "object",
                            "properties": {
                              "details": {
                                "type": "object",
                                "properties": {
                                  "usd": {
                                    "type": "integer",
                                    "example": 0,
                                    "default": 0
                                  },
                                  "duration": {
                                    "type": "integer",
                                    "example": 0,
                                    "default": 0
                                  },
                                  "total_audio": {
                                    "type": "integer",
                                    "example": 0,
                                    "default": 0
                                  },
                                  "channels": {
                                    "type": "integer",
                                    "example": 0,
                                    "default": 0
                                  },
                                  "streams": {
                                    "type": "integer",
                                    "example": 0,
                                    "default": 0
                                  },
                                  "models": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  },
                                  "method": {
                                    "type": "string",
                                    "example": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  },
                                  "features": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  },
                                  "config": {
                                    "type": "object",
                                    "properties": {
                                      "alternatives": {
                                        "type": "integer",
                                        "example": 0,
                                        "default": 0
                                      },
                                      "diarize": {
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "keywords": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": "string"
                                        }
                                      },
                                      "language": {
                                        "type": "string",
                                        "example": "string"
                                      },
                                      "model": {
                                        "type": "string",
                                        "example": "string"
                                      },
                                      "multichannel": {
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "ner": {
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "numerals": {
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "profanity_filter": {
                                        "type": "boolean",
                                        "example": false,
                                        "default": true
                                      },
                                      "punctuate": {
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "redact": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": "string"
                                        }
                                      },
                                      "search": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": "string"
                                        }
                                      },
                                      "utterances": {
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      }
                                    }
                                  }
                                }
                              },
                              "code": {
                                "type": "integer",
                                "example": 0,
                                "default": 0
                              },
                              "completed": {
                                "type": "string",
                                "example": "YYYY-MM-DDThh:mm:ss.sTZD"
                              }
                            }
                          },
                          "callback": {
                            "type": "object",
                            "properties": {
                              "attempts": {
                                "type": "integer",
                                "example": 0,
                                "default": 0
                              },
                              "code": {
                                "type": "integer",
                                "example": 0,
                                "default": 0
                              },
                              "completed": {
                                "type": "string",
                                "example": "YYYY-MM-DDThh:mm:ss.sTZD"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/requests/{request_id}": {
      "get": {
        "summary": "Get Request",
        "description": "Retrieves the details of the specified request sent to the Deepgram API for the specified project",
        "operationId": "get-request",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to retrieve the specified request. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "request_id",
            "in": "path",
            "description": "Unique identifier of the request that you want to retrieve. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"request_id\": \"uuid\",\n\t\"created\": \"YYYY-MM-DDThh:mm:ss.sTZD\",\n\t\"path\": \"string\",\n\t\"api_key_id\": \"uuid\",\n\t\"response\": {\n\t\t\"details\": {\n\t\t\t\"usd\": 0,\n\t\t\t\"duration\": 0,\n\t\t\t\"total_audio\": 0,\n\t\t\t\"channels\": 0,\n\t\t\t\"streams\": 0,\n\t\t\t\"models\": [\"string\"],\n\t\t\t\"method\": \"string\",\n\t\t\t\"tags\": [\"string\"],\n\t\t\t\"features\": [\"string\"],\n\t\t\t\"config\": {\n\t\t\t\t\"alternatives\": 0,\n\t\t\t\t\"callback\": \"string\",\n\t\t\t\t\"diarize\": true,\n\t\t\t\t\"keywords\": [\"string\"],\n\t\t\t\t\"language\": \"string\",\n\t\t\t\t\"model\": \"string\",\n\t\t\t\t\"multichannel\": true,\n\t\t\t\t\"ner\": true,\n\t\t\t\t\"numerals\": true,\n\t\t\t\t\"profanity_filter\": true,\n\t\t\t\t\"punctuate\": true,\n\t\t\t\t\"redact\": [\"string\"],\n\t\t\t\t\"search\": [\"string\"],\n\t\t\t\t\"utterances\": true\n\t\t\t}\n\t\t},\n\t\t\"code\": 0,\n\t\t\"completed\": \"YYYY-MM-DDThh:mm:ss.sTZD\"\n\t},\n\t\"callback\": {\n\t\t\"attempts\": 0,\n\t\t\"code\": 0,\n\t\t\"completed\": \"YYYY-MM-DDThh:mm:ss.sTZD\"\n\t}\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "example": "uuid"
                    },
                    "created": {
                      "type": "string",
                      "example": "YYYY-MM-DDThh:mm:ss.sTZD"
                    },
                    "path": {
                      "type": "string",
                      "example": "string"
                    },
                    "api_key_id": {
                      "type": "string",
                      "example": "uuid"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "object",
                          "properties": {
                            "usd": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "duration": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "total_audio": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "channels": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "streams": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "models": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "string"
                              }
                            },
                            "method": {
                              "type": "string",
                              "example": "string"
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "string"
                              }
                            },
                            "features": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "string"
                              }
                            },
                            "config": {
                              "type": "object",
                              "properties": {
                                "alternatives": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "callback": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "diarize": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "keywords": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "string"
                                  }
                                },
                                "language": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "model": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "multichannel": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "ner": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "numerals": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "profanity_filter": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "punctuate": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "redact": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "string"
                                  }
                                },
                                "search": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "string"
                                  }
                                },
                                "utterances": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                }
                              }
                            }
                          }
                        },
                        "code": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "completed": {
                          "type": "string",
                          "example": "YYYY-MM-DDThh:mm:ss.sTZD"
                        }
                      }
                    },
                    "callback": {
                      "type": "object",
                      "properties": {
                        "attempts": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "code": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "completed": {
                          "type": "string",
                          "example": "YYYY-MM-DDThh:mm:ss.sTZD"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/usage/fields": {
      "get": {
        "summary": "Get Fields",
        "description": "Lists the features, models, tags, languages, and processing method used for requests in the specified project",
        "operationId": "get-fields",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to retrieve fields. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start date of the requested date range. Format is YYYY-MM-DD. If a full timestamp is given, it will be truncated to a day. Dates are UTC.  Defaults to the date of your first request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date of the requested date range. Format is YYYY-MM-DD. If a full timestamp is given, it will be truncated to a day. Dates are UTC.  Defaults to the current date.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"tags\": [\"string\"],\n\t\"models\": [\n\t\t{\n\t\t\t\"name\": \"string\",\n\t\t\t\"language\": \"string\",\n\t\t\t\"version\": \"string\",\n\t\t\t\"model_id\": \"string\"\n\t\t}\n\t],\n\t\"processing_methods\": [\"string\"],\n\t\"languages\": [\"string\"],\n\t\"features\": [\"string\"]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "string"
                      }
                    },
                    "models": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "string"
                          },
                          "language": {
                            "type": "string",
                            "example": "string"
                          },
                          "version": {
                            "type": "string",
                            "example": "string"
                          },
                          "model_id": {
                            "type": "string",
                            "example": "string"
                          }
                        }
                      }
                    },
                    "processing_methods": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "string"
                      }
                    },
                    "languages": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "string"
                      }
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/balances": {
      "get": {
        "summary": "Get Balances",
        "description": "Generates a list of outstanding balances for the specified project",
        "operationId": "get-all-balances",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Generates a list of outstanding balances for the specified project. To see balances, the authenticated account must be a project owner or administrator. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"balances\": [\n\t\t{\n\t\t\t\"balance_id\": \"uuid\",\n\t\t\t\"amount\": 0,\n\t\t\t\"units\": \"string\",\n\t\t\t\"purchase\": \"string\"\n\t\t}\n\t]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "balances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "balance_id": {
                            "type": "string",
                            "example": "uuid"
                          },
                          "amount": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "units": {
                            "type": "string",
                            "example": "string"
                          },
                          "purchase": {
                            "type": "string",
                            "example": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/balances/{balance_id}": {
      "get": {
        "summary": "Get Balance",
        "description": "Retrieves details about the specified balance",
        "operationId": "get-balance",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to retrieve the specified balance. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "balance_id",
            "in": "path",
            "description": "Unique identifier of the balance that you want to retrieve. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"balance_id\": \"uuid\",\n\t\"amount\": 0,\n\t\"units\": \"string\",\n\t\"purchase\": \"string\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance_id": {
                      "type": "string",
                      "example": "uuid"
                    },
                    "amount": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "units": {
                      "type": "string",
                      "example": "string"
                    },
                    "purchase": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/invites": {
      "get": {
        "summary": "Get Invites",
        "description": "Generates a list of invites",
        "operationId": "list-invites",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to list invites. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"invites\": [\n    {\n      \"email\": \"string\",\n      \"scope\": \"string\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "invites": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "example": "string"
                          },
                          "scope": {
                            "type": "string",
                            "example": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "User does not have sufficient permissions."
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"category\": \"NOT_FOUND\",\n  \"message\": \"A project with the submitted ID cannot be found.\",\n  \"details\": \"Check that you have submitted the intended project ID and that the project has not been deleted.\",\n  \"request_id\": \"748f0880-8584-4003-b5aa-08168c5dd14e\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    },
                    "message": {
                      "type": "string",
                      "example": "A project with the submitted ID cannot be found."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you have submitted the intended project ID and that the project has not been deleted."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "748f0880-8584-4003-b5aa-08168c5dd14e"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Send Invite",
        "description": "Sends an Invite",
        "operationId": "send-invites",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to send an invite for. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "scope"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email to invite to the project"
                  },
                  "scope": {
                    "type": "string",
                    "description": "Scope to give the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"Sent an invite!\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sent an invite!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "Invalid request: scope must be either 'member', 'admin' or 'owner'."
                  }
                }
              }
            }
          },
          "401": {
            "description": "401",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": "User does not have sufficient permissions."
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"err_code\": \"PROJECT_NOT_FOUND\",\n  \"err_msg\": \"Project not found.\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "err_code": {
                      "type": "string",
                      "example": "PROJECT_NOT_FOUND"
                    },
                    "err_msg": {
                      "type": "string",
                      "example": "Project not found."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/invites/{email}": {
      "delete": {
        "summary": "Delete Invite",
        "description": "Deletes an invite",
        "operationId": "delete-invite",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project from which you want to remove the authenticated account. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "email",
            "in": "path",
            "description": "Email of the invite you want to delete",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"message\": \"Successfully deleted the invite.\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted the invite."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{project_id}/usage": {
      "get": {
        "summary": "Summarize Usage",
        "description": "Retrieves a summary of usage statistics",
        "operationId": "summarize-usage",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Unique identifier of the project for which you want to retrieve the specified request. (UUID)",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "accessor",
            "in": "query",
            "description": "Limits results to the given API key. To include multiple API Keys, send multiple instances in query string (e.g., accessor=2ed1...cfa4e&accessor=1dc0...bez3d).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Limits results to requests associated with the specified tag. To include multiple tags, send multiple instances in query string (e.g., tag=dev&tag=production)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "query",
            "description": "Limits results to requests processed using the specified method. To include multiple methods, send multiple instances in query string (e.g., method=sync&method=streaming).",
            "schema": {
              "type": "string",
              "enum": [
                "sync",
                "async",
                "streaming"
              ]
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Limits results to requests run with the specified model UUID applied.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "multichannel",
            "in": "query",
            "description": "Limits results to requests that include the `multichannel` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "interim_results",
            "in": "query",
            "description": "Limits results to requests that include the `interim_results` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "punctuate",
            "in": "query",
            "description": "Limits results to requests that include the `punctuate` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ner",
            "in": "query",
            "description": "Limits results to requests that include the `ner` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "utterances",
            "in": "query",
            "description": "Limits results to requests that include the `utterances` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "replace",
            "in": "query",
            "description": "Limits results to requests that include the `replace` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "profanity_filter",
            "in": "query",
            "description": "Limits results to requests that include the `profanity_filter` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "keywords",
            "in": "query",
            "description": "Limits results to requests that include the `keywords` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "detect_topics",
            "in": "query",
            "description": "Limits results to requests that include the `detect_topics` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "diarize",
            "in": "query",
            "description": "Limits results to requests that include the `diarize` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limits results to requests that include the `search` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "redact",
            "in": "query",
            "description": "Limits results to requests that include the `redact` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "alternatives",
            "in": "query",
            "description": "Limits results to requests that include the `alternatives` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "numerals",
            "in": "query",
            "description": "Limits results to requests that include the `numerals` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "smart_format",
            "in": "query",
            "description": "Limits results to requests that include the `smart_format` feature.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "deployment",
            "in": "query",
            "description": "Limits results to requests fulfilled in either Deepgram hosted cloud or your onprem deployment environment. To include multiple values, send multiple instances in query string (e.g. deployment=hosted&deployment=onprem).",
            "schema": {
              "type": "string",
              "enum": [
                "hosted",
                "onprem"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"start\": \"date\",\n  \"end\": \"date\",\n  \"resolution\": {\n    \"units\": \"string\",\n    \"amount\": 0\n  },\n  \"results\": [\n    {\n      \"start\": \"date\",\n      \"end\": \"date\",\n\t\t\t\"hours\": 0,\n      \"total_hours\": 0,\n      \"requests\": 0\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "example": "date"
                    },
                    "end": {
                      "type": "string",
                      "example": "date"
                    },
                    "resolution": {
                      "type": "object",
                      "properties": {
                        "units": {
                          "type": "string",
                          "example": "string"
                        },
                        "amount": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        }
                      }
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "example": "date"
                          },
                          "end": {
                            "type": "string",
                            "example": "date"
                          },
                          "hours": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "total_hours": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "requests": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"category\":\"UNAUTHORIZED\",\"message\":\"Authentication failed.\",\"details\":\"Check that you are using the correct credentials.\",\"request_id\":\"29fcbd9f-1294-40b2-9d30-35eaad478e29\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "Check that you are using the correct credentials."
                    },
                    "request_id": {
                      "type": "string",
                      "example": "29fcbd9f-1294-40b2-9d30-35eaad478e29"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "x-readme": {
    "headers": []
  },
  "x-readme-fauxas": true
}